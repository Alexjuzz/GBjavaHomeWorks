openapi: 3.0.0
info:
  title: Сервис работы с робот-пылесосом
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1/
    description: Dev server
paths:
  /registration:
    post:
      summary: Регистрация нового пользователя
      tags:
        - user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
               $ref: "#/components/schemas/userRegistration"
      responses:
        "200":
          description: Успешная регистрация пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /robots:
    get:
      summary: Получить список роботов
      description: Этот запрос возвращает список всех доступных роботов.
      tags:
        - robots
      operationId: getAllRobots
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Успешный ответ со списком роботов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/robots"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      parameters:
        - name: status
          in: query
          description: Фильтр по статусу роботов (например, "charging")
          required: false
          schema:
            type: string
  /calendar:
    get:
      summary: Метод для получения календаря
      tags:
        - calendar
      operationId: getCalendar
      responses:
        "200":
          description: Успешное получение календаря со всеми запланированными задачами
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/calendar"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Добавление записи в календарь
      description: Эта операция позволяет добавить новую запись в календарь.
      tags:
        - calendar
      operationId: setRecord
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/calendar"
      responses:
        "200":
          description: Успешное добавление записи в календарь
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/calendar"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /calendar/{day}:
    get:
      summary: Метод получения дня
      tags:
        - day
      operationId: getDay
      parameters:
        - name: day
          in: path
          required: true
          description: Отправив дату, получим расписание дня
          schema:
            type: string
            example: "01.03.2023"
      responses:
        "200":
          description: Успешное получение дня
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/day"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Метод очистки даты
      tags:
        - day
      operationId: deleteByDay
      parameters:
        - name: day
          in: path
          required: true
          description: Очистить события этого дня
          schema:
            type: string
            example: "01.03.2023"
      responses:
        "200":
          description: Задания данного дня были удалены
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/day"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /robots/{robot_id}/update:
    put:
      summary: Метод обновления робота
      tags:
        - robots
      operationId: updateById
      parameters:
        - name: robot_id
          in: path
          required: true
          description: Идентификатор робота
          schema:
            type: string
      responses:
        "200":
          description: Успешное включение обновления робота
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/update"
  /robots/{robot_id}/start:
    post:
      summary: Метод запуска робота
      tags:
        - robots
      operationId: robotStart
      parameters:
        - name: robot_id
          in: path
          required: true
          description: Запуск определенного робота к работе
          schema:
            type: string
      responses:
        "200":
          description: Успешный запуск
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/start"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /robots/{robot_id}/stop:
    post:
      summary: Метод остановки робота
      tags:
        - robots
      operationId: robotStop
      parameters:
        - name: robot_id
          in: path
          required: true
          description: Остановка определенного робота к работе
          schema:
            type: string
      responses:
        "200":
          description: Успешный запуск
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/stop"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /robots/{robot_id}:
    get:
      summary: Метод получения одного робота
      tags:
        - robots
      operationId: getRobotById
      parameters:
        - name: robot_id
          in: path
          required: true
          description: Идентификатор робота
          schema:
            type: string
      responses:
        "200":
          description: Успешное получение робота
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/robots"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Метод удаления робота
      tags:
        - robots
      operationId: deleteById
      parameters:
        - name: robot_id
          in: path
          required: true
          description: Идентификатор робота
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление робота
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/robots"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user:
    get:
      summary: Метод создания пользователя
      tags:
        - user
      operationId: createUser
      responses:
        "200":
          description: Успешное добавление нового пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/{user_id}:
    put:
      summary: Метод обновления пользователя
      tags:
        - user
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          required: true
          description: Идентификатор юзера
          schema:
            type: string
      responses:
        "200":
          description: Успешное обновление юзера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/updateUser"
  /user/{user_id}/delete:
    delete:
      summary: Метод удаления пользователя
      tags:
        - user
      operationId: deleteUserById
      parameters:
        - name: user_id
          in: path
          required: true
          description: Удаление юзера
          schema:
            type: string
      responses:
        "200":
          description: Успешное удаление юзера
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/deleteUser"
        "default":
          description: Ошибка ответа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    userRegistration:  
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
    robot:
      type: object
      required:
        - name
        - status
      properties:
        robot_id:
          type: integer
          example: 13
        name:
          type: string
          example: Robot_391923
        version:
          type: string
          example: v0.0.1
        status:
          type: string
          enum:
            - charging
            - run
            - error
            - updating
          example: charging
          description: Текущее состояние робота
        statusID:
          type: integer
          example: 1
    robots:
      type: array
      items:
        $ref: "#/components/schemas/robot"
    calendar:
      type: object
      required:
        - listdate
      properties:
        listdate:
          type: array
          example: {Day 01.03.2023 MONDAY: { Type: water clean, TimeStart: 15-30 }, DateRecord: "25.02.2023"}
          items:
            $ref: "#/components/schemas/calendar"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
    day:
      required:
        - message
      properties:
        message:
          type: string
          example: "Type: water clean. TimeStart: 15-30"
    start:
      type: boolean
      example: true
    stop:
      type: boolean
      example: true
    update:
      type: boolean
      example: true
    user:
      type: object
      required:
        - user_id
        - name
        - password
        - login
        - accessByToken
      properties:
        user_id:
          type: integer
          example: 1
        name:
          type: string
          example: Balbes
        password:
          type: string
          example: TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0
        login:
          type: string
          example: your_login
        accessByToken:
          type: string
          example: your_access_token
    updateUser:
      type: object
      required:
        - name
        - password
      properties:
        name:
          type: string
          example: Alexs
        password:
          type: string
          example: GlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0
    deleteUser:
      type: boolean
      example: true
